//  Center vertically and/or horizontally an absolute positioned element

//  Media queries

@mixin MQ($canvas) {
    @if $canvas == S {
    /* Mobile devices */
    @media only screen and (min-width: $S) { @content; }
    }
    @else if $canvas == M {
    /* Tablets and phablets */
    @media only screen and (min-width: $M) { @content; }
    }
    @else if $canvas == L {
    /* Landscape tablets and desktop or laptops */
    @media only screen and (min-width: $L) { @content; }
    }
    @else if $canvas == XL {
      /* Landscape tablets and desktop or laptops */
      @media only screen and (min-width: $XL) { @content; }
    }
    @else if $canvas == SL {
        @media only screen and (min-width: $S) and (orientation:Landscape) { @content; }
    }
}

@mixin bx_s($bxs_type: border-box) {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box;
  -o-box-sizing: border-box;
  box-sizing: border-box;
}

@mixin box-shadow($bx_sha_config:0 0 4px, $bx_sha_color:lighten($color_grey_light, 6.725))  {
    -webkit-box-shadow: $bx_sha_config $bx_sha_color;
    -moz-box-shadow: $bx_sha_config $bx_sha_color;
    -ms-box-shadow: $bx_sha_config $bx_sha_color;
    -o-box-shadow: $bx_sha_config $bx_sha_color;
    box-shadow: $bx_sha_config $bx_sha_color;
}

@mixin text_truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  width: 100%;
}

@mixin clearfix {
    &:before,

    &:after {
        content: "";
        display: table;
    }

    &:after {
        clear: both;
    }
    *zoom: 1;
}

// antialiasing mode font rendering

@mixin font-smoothing {
    text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin image_replacement {
  /* image replacement properties */
  overflow: hidden;
  text-indent: 100%;
  white-space: nowrap;
}

@mixin center($xy:xy) {
  @if $xy == xy {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    @include transform(translateX(-50%) translateY(-50%));
  }
  @else if $xy == x {
    left: 50%;
    right: auto;
    @include transform(translateX(-50%));
  }
  @else if $xy == y {
    top: 50%;
    bottom: auto;
    @include transform(translateY(-50%));
  }
}

@mixin column($percentage, $float-direction:left) {
  width: 100% * $percentage;
  float: $float-direction;
}
