// rem fallback - credits: http://zerosixthree.se/

@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

// center vertically and/or horizontally an absolute positioned element

@mixin center($xy:xy) {
  @if $xy == xy {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    @include transform(translateX(-50%) translateY(-50%));
  }
  @else if $xy == x {
    left: 50%;
    right: auto;
    @include transform(translateX(-50%));
  }
  @else if $xy == y {
    top: 50%;
    bottom: auto;
    @include transform(translateY(-50%));
  }
}

// border radius

@mixin border-radius($radius:.25em) {
  border-radius: $radius;
}

// antialiasing mode font rendering

@mixin font-smoothing {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// media queries

// Responsive breakpoints  

$S: 480px; // Small phones Styles are written for this breakpoint by default, so no need to specify it.
$M: 800px; // Phablets   
$L: 992px; // 10" Tablets and desktops
$XL: 1170px; // desktops..  

@mixin MQ($canvas) {
    @if $canvas == S {
    /* Mobile devices */
    @media only screen and (min-width: $S) { @content; } 
    }
    @else if $canvas == M {
    /* Tablets and phablets */
    @media only screen and (min-width: $M) { @content; } 
    }
    @else if $canvas == L {
    /* Landscape tablets and desktop or laptops */
    @media only screen and (min-width: $L) { @content; } 
    }
    @else if $canvas == XL {
      /* Landscape tablets and desktop or laptops */
      @media only screen and (min-width: $XL) { @content; } 
    }
    @else if $canvas == SL {
        @media only screen and (min-width: $S) and (orientation:Landscape) { @content; } 
    }
}

@mixin bx_s($bxs_type: border-box) {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box;
  -o-box-sizing: border-box;
  box-sizing: border-box;
}

@mixin box-shadow($bx_sha_config:0 0 4px, $bx_sha_color:lighten($color_grey_light, 6.725))  {
    -webkit-box-shadow: $bx_sha_config $bx_sha_color;
    -moz-box-shadow: $bx_sha_config $bx_sha_color;
    -ms-box-shadow: $bx_sha_config $bx_sha_color;
    -o-box-shadow: $bx_sha_config $bx_sha_color;
    box-shadow: $bx_sha_config $bx_sha_color;
}

@mixin text_truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  width: 100%;
}

@mixin clearfix {
    &:before,

    &:after {
        content: "";
        display: table;
    }

    &:after {
        clear: both;
    }
    *zoom: 1;
}

@mixin image_replacement {
  /* image replacement properties */
  overflow: hidden; 
  text-indent: 100%;
  white-space: nowrap;
}

@mixin column($percentage, $float-direction:left) {
  width: 100% * $percentage;
  float: $float-direction;
}


@font-face {
    font-family: 'proxima_nova_light';
    src: url('../fonts/proxima_nova_light/ProximaNova-Light.eot');
    src: url('../fonts/proxima_nova_light/ProximaNova-Light.eot?#iefix') format('embedded-opentype'),
        url('../fonts/proxima_nova_light/ProximaNova-Light.woff2') format('woff2'),
        url('../fonts/proxima_nova_light/ProximaNova-Light.woff') format('woff'),
        url('../fonts/proxima_nova_light/ProximaNova-Light.ttf') format('truetype'),
        url('../fonts/proxima_nova_light/ProximaNova-Light.svg#ProximaNova-Light') format('svg');
    font-weight: 300;
    font-style: normal;
}

@font-face {
    font-family: 'proxima_nova_bold';
    src: url('../fonts/proxima_nova_bold/ProximaNova-Bold.eot');
    src: url('../fonts/proxima_nova_bold/ProximaNova-Bold.eot?#iefix') format('embedded-opentype'),
        url('../fonts/proxima_nova_bold/ProximaNova-Bold.woff2') format('woff2'),
        url('../fonts/proxima_nova_bold/ProximaNova-Bold.woff') format('woff'),
        url('../fonts/proxima_nova_bold/ProximaNova-Bold.ttf') format('truetype'),
        url('../fonts/proxima_nova_bold/ProximaNova-Bold.svg#ProximaNova-Bold') format('svg');
    font-weight: bold;
    font-style: normal;
}

@font-face {
    font-family: 'proxima_nova_regular';
    src: url('../fonts/proxima_nova_regular/ProximaNova-Regular.eot');
    src: url('../fonts/proxima_nova_regular/ProximaNova-Regular.eot?#iefix') format('embedded-opentype'),
        url('../fonts/proxima_nova_regular/ProximaNova-Regular.woff2') format('woff2'),
        url('../fonts/proxima_nova_regular/ProximaNova-Regular.woff') format('woff'),
        url('../fonts/proxima_nova_regular/ProximaNova-Regular.ttf') format('truetype'),
        url('../fonts/proxima_nova_regular/ProximaNova-Regular.svg#ProximaNova-Regular') format('svg');
    font-weight: normal;
    font-style: normal;
}